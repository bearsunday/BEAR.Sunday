<?xml version="1.0"?>
<ruleset
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="vendor/squizlabs/php_codesniffer/phpcs.xsd">

    <arg name="basepath" value="."/>
    <arg name="extensions" value="php"/>
    <arg name="parallel" value="80"/>
    <arg name="cache" value=".phpcs-cache"/>

    <!-- Compatibility with PHP 8.0 -->
    <config name="php_version" value="80000"/>

    <!-- Ignore warnings, show progress of the run and show sniff names -->
    <arg value="nps"/>

    <!-- Directories to be checked -->
    <file>src</file>
    <file>tests</file>
    <exclude-pattern>*/tests/tmp/*</exclude-pattern>

    <!-- PSR12 Coding Standard -->
    <rule ref="PSR12"/>

    <!-- Exclude NativeTypeHintrule from interface and abstract class -->
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint">
        <exclude-pattern>*/src/*Interface.php</exclude-pattern>
        <exclude-pattern>*/src/Abstract*.php</exclude-pattern>
        <exclude-pattern>*/src/ResourceObject.php</exclude-pattern>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint">
        <exclude-pattern>*/src/*Interface.php</exclude-pattern>
        <exclude-pattern>*/src/Abstract*.php</exclude-pattern>
        <exclude-pattern>*/src/ResourceObject.php</exclude-pattern>
    </rule>
    <!-- Doctrine Coding Standard -->
    <rule ref="Doctrine">
        <!-- Inapplicable for this project -->
        <!-- Base -->
        <exclude name="Generic.Formatting.MultipleStatementAlignment.NotSame"/>
        <exclude name="Squiz.Strings.DoubleQuoteUsage.ContainsVar"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming.SuperfluousPrefix"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix"/>
        <exclude name="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.MissingVariable"/>
        <exclude name="SlevomatCodingStandard.Commenting.UselessInheritDocComment.UselessInheritDocComment"/>
        <exclude name="Squiz.Commenting.FunctionComment.InvalidNoReturn"/>
        <!-- /Base -->
        <!-- Option -->
        <!--        <exclude name="SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed"/>-->
        <exclude name="SlevomatCodingStandard.PHP.RequireExplicitAssertion.RequiredExplicitAssertion"/>
        <!-- /Option -->
        <!-- Exclude Fake files form Doctrine CS -->
        <exclude-pattern>*/tests/Fake/*</exclude-pattern>
    </rule>

    <!-- Additional Rules -->
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing">
        <properties>
            <property name="annotationsGroups" type="array">
                <element value="@param, @psalm-param, @phpstan-param"/>
                <element value="@return, @psalm-return, @phpstan-return"/>
                <element value="@throws"/>
            </property>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint">
        <include-pattern>tests/*</include-pattern>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.PropertySpacing">
        <properties>
            <property name="minLinesCountBeforeWithComment" value="1"/>
            <property name="maxLinesCountBeforeWithComment" value="1"/>
            <property name="maxLinesCountBeforeWithoutComment" value="0"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing">
        <exclude-pattern>src/ClassParam.php</exclude-pattern>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>

    <exclude-pattern>*/Fake/*</exclude-pattern>
    <exclude-pattern>*/tmp/*</exclude-pattern>
</ruleset>
